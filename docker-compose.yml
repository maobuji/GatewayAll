#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
version: "3"

services:
  apisix:
    image: registry.cn-shenzhen.aliyuncs.com/maobuji/apisix:latest
    restart: always
    volumes:
      - ./apisix_log:/usr/local/apisix/logs
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./apisix_conf/apisix:/usr/bin/apisix:ro
    depends_on:
      - etcd
    ports:
      - "9080:9080/tcp"
      - "9443:9443/tcp"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.11
  etcd:
    image: bitnami/etcd:3.4.9
    user: root
    restart: always
    volumes:
      - ./etcd_data:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.10
  web1:
    image: ruby:2-alpine
    command: sh -c "mkdir -p /tmp/www && echo 'web1' > /tmp/www/web1.txt && ruby -run -ehttpd /tmp/www -p8000"
    restart: always
    ports:
      - "9081:8000/tcp"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.12

  web2:
    image: ruby:2-alpine
    command: sh -c "mkdir -p /tmp/www && echo 'web2' > /tmp/www/web2.txt && ruby -run -ehttpd /tmp/www -p8000"
    restart: always
    ports:
      - "9082:8000/tcp"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.13

  mysql:
    image: mysql:latest
    restart: always
    ports:
      - "3309:3306/tcp"
    environment:
      - MYSQL_ROOT_PASSWORD=mysqlpw_123456
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./mysql_conf:/etc/mysql/conf.d
      - ./mysql_init_script/db:/docker-entrypoint-initdb.d
    networks:
      gateway-network:
        ipv4_address: 192.168.5.14

  manager:
    image: registry.cn-shenzhen.aliyuncs.com/maobuji/apisix-manager:latest
    restart: always
    ports:
      - "8080:8080/tcp"
    environment:
      - ENV=prod
    volumes:
      - ./manager_conf/build.sh:/root/manager-api/build.sh
    networks:
      gateway-network:
        ipv4_address: 192.168.5.15

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.16

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.17

  dashboard:
    image: registry.cn-shenzhen.aliyuncs.com/maobuji/apisix-dashboard:latest
    restart: always
    ports:
      - "80:80/tcp"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.18

  logstash:
    image: registry.cn-shenzhen.aliyuncs.com/maobuji/logstash:latest
    restart: always
#    stdin_open: true
#    tty: true
    volumes:
      - ./logstash_conf/config/logstash.yml:/usr/share/logstash/config/logstash.yml:rw
      - ./logstash_conf/pipeline:/usr/share/logstash/pipeline:rw
      - ./apisix_log:/usr/share/logstash/logstash_read/:rw
      - ./_driver/mysql/mysql-connector-java-8.0.21.jar:/usr/share/logstash/mysql-connector-java-8.0.21.jar:ro
      - ./_driver/mysql/mysql-connector-java-8.0.21.jar:/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java-8.0.21.jar:ro
    ports:
      - "9600:9600/tcp"
      - "5044:5044/tcp"
    networks:
      gateway-network:
        ipv4_address: 192.168.5.19
  zookeeper:
    image: zookeeper:3.5.5
    restart: always
    container_name: zookeeper
    ports:
      - "2182:2181"
    expose:
      - "2181"
    environment:
      ZOO_MY_ID: 1
    networks:
      gateway-network:
        ipv4_address: 192.168.5.20
  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    restart: always
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://192.168.5.21:9092,OUTSIDE://172.18.100.71:9094
      - KAFKA_LISTENERS=INSIDE://:9092,OUTSIDE://:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
#      - KAFKA_LISTENERS=PLAINTEXT://192.168.5.21:9092
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.5.21:9092
      - KAFKA_ZOOKEEPER_CONNECT=192.168.5.20:2181
      - KAFKA_MESSAGE_MAX_BYTES=2000000
      #- KAFKA_CREATE_TOPICS=${KAFKA_BOOTSTRAP_CREATE_TOPICS}
      #- KAFKA_HEAP_OPTS=${KAFKA_JVM_OPTS}
    ports:
      - "9092:9092/tcp"
      - "9094:9094/tcp"
    hostname: 192.168.5.21
    volumes:
      - ./kafka_data:/kafka
    expose:
      - "9092"
    depends_on:
      - zookeeper
    networks:
      gateway-network:
        ipv4_address: 192.168.5.21
  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    ports:
      - "9000:9000/tcp"
    environment:
      ZK_HOSTS: 192.168.5.20:2181
      APPLICATION_SECRET: "admin"
    depends_on:
      - zookeeper
      - kafka
    networks:
      gateway-network:
        ipv4_address: 192.168.5.22
networks:
  gateway-network:
    driver: bridge
    ipam:
      config:
      - subnet: 192.168.5.0/24
